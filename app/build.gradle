plugins {
    id 'com.android.application'
}

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    namespace 'xtr.keymapper'
    compileSdk 34

    defaultConfig {
        applicationId "xtr.keymapper"
        minSdk 28
        targetSdk 34
        versionCode 19
        versionName '2.3.1'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        aaptOptions {
            ignoreAssetsPattern ''
        }
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            applicationIdSuffix ".debug"
            resValue("string", "app_name", "XtMapper (Debug)")
        }

    }

    externalNativeBuild {
        ndkBuild {
            path 'Android.mk'
        }
    }

    applicationVariants.configureEach {
        it.outputs.every {
            it.outputFileName = "XtMapper-${it.name}-v${defaultConfig.versionName}.apk"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    buildFeatures {
        viewBinding true
        aidl true
        buildConfig true
    }
    packagingOptions.jniLibs.useLegacyPackaging true

    splits {

        // Configures multiple APKs based on ABI.
        abi {
            // Enables building multiple APKs per ABI.
            enable true

            // Resets the list of ABIs for Gradle to create APKs for to none.
            reset()

            // Specifies a list of ABIs for Gradle to create APKs for.
            include "x86_64", "x86", "armeabi-v7a", "arm64-v8a"

            // Specifies that we want to also generate a universal APK that includes all ABIs.
            universalApk true
        }
    }

    ndkVersion '26.1.10909125'
    
    dependenciesInfo {
        // Disables dependency metadata when building APKs.
        includeInApk = false
        // Disables dependency metadata when building Android App Bundles.
        includeInBundle = false
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation "androidx.coordinatorlayout:coordinatorlayout:1.2.0"
    implementation 'com.google.android.material:material:1.12.0'
    implementation "com.leinardi.android:speed-dial:3.3.0"
    implementation 'androidx.webkit:webkit:1.12.1'
    implementation "com.github.topjohnwu.libsu:core:5.3.0"
    implementation "com.github.topjohnwu.libsu:service:5.3.0"
    implementation "dev.rikka.shizuku:api:13.1.5"
    implementation "dev.rikka.shizuku:provider:13.1.5"
    compileOnly project(path: ':app:hidden-api')
}
